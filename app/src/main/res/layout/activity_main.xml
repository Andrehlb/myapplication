<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="br.com.venturus.andrehlb.myapplication.MainActivity">

    <!-- O TextView possui um identificador (android:id) que é usado pelo
    View Binding para referenciar e manipular o componente diretamente n
    o código Kotlin. No eixo Horizontal, o layout_width configurado como match_parent
    (ou 0dp em um ConstraintLayout) faz com que a largura se estenda por
    todo o contêiner pai, sendo que a restrição layout_constraintStart_toStartOf="parent" fixa
    o lado de start (esquerdo em LTR) à borda inicial, garantindo a adaptação RTL. No eixo Vertical,
    o layout_height ajustado para wrap_content faz com que a altura seja o suficiente para envolver
    o texto ("Hello World!"), enquanto as restrições de topo (constraintTop)
    e base (constraintBottom) fixam o componente entre as extremidades da tela,
    resultando em uma centralização vertical por padrão. Por fim, o layout_marginTop
    adiciona um espaçamento fixo de 16dp acima, atuando como um desvio que
    move o TextView ligeiramente para baixo em relação ao centro exato. -->

    <TextView
        android:id="@+id/text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Hello World!"
        android:textAlignment="center"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.583" />

    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintTopBottomOf="@+id/text"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:src="@drawable/boneco_android" />

    <!-- Botão adicionado para a funcionalidade de adicionar tarefas
     O Button possui um identificador (android:id) que é usado pelo
     View Binding para referenciar e manipular o componente no
     Kotlin (ex: binding.btnAddTask). No eixo Horizontal, o
     layout_width ajustado para wrap_content faz com que sua largura
     ocupe apenas o espaço necessário para o texto ("Add Task Placeholder"),
     enquanto as restrições de start e end fixam suas laterais nas bordas
     do pai, resultando na centralização horizontal perfeita. No eixo
     Vertical, o layout_height ajustado para wrap_content faz com que
     sua altura envolva o texto, e a restrição layout_constraintTop_toBottomOf
     o fixa abaixo do componente com o ID text_app. Por fim, o
     layout_marginTop adiciona um espaçamento fixo de 16dp
     acima, garantindo que o botão não fique colado ao componente
     superior.-->

    <Button
        android:id="@+id/btn_add_task"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="188dp"
        android:text="Add Task Placeholder"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/text" />

    <TextView
        android:id="@+id/text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/app_text"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.443" />

    <android.recyclerview.widget.RecyclerView
        android:id="@+id/pokemon_list"
        android:layout_width="0dp"
        android:layout_height="0dp"/>

       app:layout_constraintTop_toBottomOf="@id/btn_add_task"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_marginTop="16dp" />

</androidx.constraintlayout.widget.ConstraintLayout>